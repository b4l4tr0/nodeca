# Flag to check, that you have not fogot to create (rename) config
#
configured: true


# Applications
#
applications:
  - nodeca.core
  - nodeca.users
  - nodeca.forum
  - nodeca.blogs
  - nodeca.editor


# Locales
#
locales:

  # Application locale used by default (first enabled one if not set).
  #
  default: en-US

  # # List of enabled locales (all found locales by default).
  # enabled:
  #   - en-US
  #   - en-GB
  #   - ru-RU


#
# Themes whitelist/blacklist
#

# You can specify either whitelist:
#
#   themes:
#     enabled:
#       - deep-purple
#       - pink-floyd
#
# or blacklist of enabled themes:
#
#   themes:
#     disabled:
#       - yellow-submarine
#
# All available themes are enabled by default, when no whitelist or blacklist
# specified. When both white and black lists are provided, whitelist is used.


# Security settings (currently - policy headers)
#
security:
  Content-Security-Policy: >
    default-src *; style-src 'unsafe-inline' *;
    script-src 'self' 'unsafe-inline' 'unsafe-eval' *.google-analytics.com;
    connect-src 'self' *.google-analytics.com;
  X-Frame-Options: DENY


# Options - different kind of constants, to keep root space clear
#
options:

  # Recaptcha keys. Replace with your own
  #
  recaptcha:
    private_key: 6LdSINcSAAAAABs6duZAvnuN2-PwceqKqZMMFEt2
    public_key: 6LdSINcSAAAAAPUJnsQreWd-lT-ILxnoIWwLAepO

  # # Cache location for differend needs (styles compiler, mincer, ...),
  # # anyone can create additional subfolders there.
  # # Path is relative to main app's root. By default - './.cache'
  # #
  # cache_dir: ./.cache


# Listening options
#
bind:
  default:
    listen: 0.0.0.0:3000
    ssl:
      listen: 0.0.0.0:3001
      key:  ./config/examples/ssl.key
      cert: ./config/examples/ssl.crt

  # SYNOPSIS:
  #
  # <apiPath>:
  #   mount: [<proto>:][//[<host>][:<port>]][/<path>]
  #   listen: <address>[:<port = 80>]
  #   ssl:
  #     key:  /path/to/file.key   # Path might be absolute
  #     cert: /path/to/file.cert  # or relative to the main app
  #
  # SSL EXAMPLE:
  #
  # default:
  #   listen: 0.0.0.0:3000
  #   mount:  https://localhost:3000
  #   ssl:
  #     key:  ./etc/server.key
  #     cert: ./etc/server.cert
  #
  forum:
    mount: /forum

  forum.index:
    mount: /

  # ACTION, WHEN REQUESTED HOST IS UNKNOWN
  #
  # _ is a special keyword that hold function called when hostname is not
  # supposed to be served by server listener, by default 404 not found:
  #
  #_: !!js/function |
  #  function (req, res) {
  #    res.writeHead(404, { 'Content-Type': 'text/plain' });
  #    res.end('Invalid host ' + req.headers.host);
  #  }
